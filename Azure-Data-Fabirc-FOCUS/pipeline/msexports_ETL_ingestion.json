{
	"name": "msexports_ETL_ingestion",
	"properties": {
		"activities": [
			{
				"name": "Get Existing Parquet Files",
				"description": "Get the previously ingested files so we can remove any older data. This is necessary to avoid data duplication in reports.",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ingestion_files",
						"type": "DatasetReference",
						"parameters": {
							"folderPath": "@pipeline().parameters.destinationFolder"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "ParquetReadSettings"
					}
				}
			},
			{
				"name": "Filter Out Current Exports",
				"description": "Remove existing files from the current export so those files do not get deleted.",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Existing Parquet Files",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@if(contains(activity('Get Existing Parquet Files').output, 'childItems'), activity('Get Existing Parquet Files').output.childItems, json('[]'))",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(endswith(item().name, '.parquet'), not(startswith(item().name, concat(pipeline().parameters.ingestionId, '__'))))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Load Schema Mappings",
				"description": "Get schema mapping file to use for the CSV to parquet conversion.",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "config",
						"type": "DatasetReference",
						"parameters": {
							"fileName": {
								"value": "@toLower(pipeline().parameters.schemaFile)",
								"type": "Expression"
							},
							"folderPath": "config/schemas"
						}
					}
				}
			},
			{
				"name": "Failed to Load Schema",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Load Schema Mappings",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": {
						"value": "@concat('Unable to load the ', pipeline().parameters.schemaFile, ' schema file. Please confirm the schema and version are supported for FinOps hubs ingestion. Unsupported files will remain in the msexports container.')",
						"type": "Expression"
					},
					"errorCode": "SchemaLoadFailed"
				}
			},
			{
				"name": "Set Additional Columns",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Load Schema Mappings",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "additionalColumns",
					"value": {
						"value": "@intersection(array(json(concat('[{\"name\":\"x_SourceProvider\",\"value\":\"Microsoft\"},{\"name\":\"x_SourceName\",\"value\":\"Cost Management\"},{\"name\":\"x_SourceType\",\"value\":\"', pipeline().parameters.exportDatasetVersion, '\"},{\"name\":\"x_SourceVersion\",\"value\":\"', pipeline().parameters.exportDatasetVersion, '\"}'))), activity('Load Schema Mappings').output.firstRow.additionalColumns)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "For Each Old File",
				"description": "Loop thru each of the existing files from previous exports.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Convert to Parquet",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Filter Out Current Exports",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter Out Current Exports').output.Value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Delete Old Ingested File",
							"description": "Delete the previously ingested files from older exports.",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ingestion",
									"type": "DatasetReference",
									"parameters": {
										"blobPath": {
											"value": "@concat(pipeline().parameters.destinationFolder, '/', item().name)",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			},
			{
				"name": "Set Destination Path",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "destinationPath",
					"value": {
						"value": "@concat(pipeline().parameters.destinationFolder, '/', pipeline().parameters.ingestionId, '__', pipeline().parameters.destinationFile)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Convert to Parquet",
				"description": "Convert CSV to parquet and move the file to the ingestion container.",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "Set Destination Path",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Load Schema Mappings",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set Additional Columns",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@last(array(split(pipeline().parameters.blobPath, '.')))",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "csv",
							"activities": [
								{
									"name": "Convert CSV File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": {
												"type": "Expression",
												"value": "@variables('additionalColumns')"
											},
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings",
												"fileExtension": ".parquet"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"validateDataConsistency": false,
										"translator": {
											"value": "@activity('Load Schema Mappings').output.firstRow.translator",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "msexports",
											"type": "DatasetReference",
											"parameters": {
												"blobPath": {
													"value": "@pipeline().parameters.blobPath",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ingestion",
											"type": "DatasetReference",
											"parameters": {
												"blobPath": {
													"value": "@variables('destinationPath')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "gz",
							"activities": [
								{
									"name": "Convert GZip CSV File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": {
												"type": "Expression",
												"value": "@variables('additionalColumns')"
											},
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings",
												"fileExtension": ".parquet"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"validateDataConsistency": false,
										"translator": {
											"value": "@activity('Load Schema Mappings').output.firstRow.translator",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "msexports_gzip",
											"type": "DatasetReference",
											"parameters": {
												"blobPath": {
													"value": "@pipeline().parameters.blobPath",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ingestion",
											"type": "DatasetReference",
											"parameters": {
												"blobPath": {
													"value": "@variables('destinationPath')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "parquet",
							"activities": [
								{
									"name": "Move Parquet File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"additionalColumns": {
												"type": "Expression",
												"value": "@variables('additionalColumns')"
											},
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "ParquetReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings",
												"fileExtension": ".parquet"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "msexports_parquet",
											"type": "DatasetReference",
											"parameters": {
												"blobPath": {
													"value": "@pipeline().parameters.blobPath",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ingestion",
											"type": "DatasetReference",
											"parameters": {
												"blobPath": {
													"value": "@variables('destinationPath')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "Unsupported File Type",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@concat('Unable to ingest the specified export file because the file type is not supported. File: ', pipeline().parameters.blobPath)",
									"type": "Expression"
								},
								"errorCode": "UnsupportedExportFileType"
							}
						}
					]
				}
			},
			{
				"name": "Read Hub Config",
				"description": "Read the hub config to determine if the export should be retained.",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "config",
						"type": "DatasetReference",
						"parameters": {
							"fileName": "settings.json",
							"folderPath": "config"
						}
					}
				}
			},
			{
				"name": "If Not Retaining Exports",
				"description": "If the msexports retention period <= 0, delete the source file. The main reason to keep the source file is to allow for troubleshooting and reprocessing in the future.",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Convert to Parquet",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Read Hub Config",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@lessOrEquals(coalesce(activity('Read Hub Config').output.firstRow.retention.msexports.days, 0), 0)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Delete Source File",
							"description": "Delete the exported data file to keep storage costs down. This file is not referenced by any reporting systems.",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "msexports_parquet",
									"type": "DatasetReference",
									"parameters": {
										"blobPath": {
											"value": "@pipeline().parameters.blobPath",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"blobPath": {
				"type": "String"
			},
			"destinationFile": {
				"type": "string"
			},
			"destinationFolder": {
				"type": "string"
			},
			"ingestionId": {
				"type": "string"
			},
			"schemaFile": {
				"type": "string"
			},
			"exportDatasetType": {
				"type": "string"
			},
			"exportDatasetVersion": {
				"type": "string"
			}
		},
		"variables": {
			"additionalColumns": {
				"type": "Array"
			},
			"destinationPath": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-04-24T21:19:59Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}